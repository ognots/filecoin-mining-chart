{{- if .Values.lotusCommWorker.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-lotus-worker-comm
  labels:
    app: lotus-worker-comm-app
spec:
  replicas: {{ .Values.lotusCommWorker.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: lotus-worker-comm-app
  template:
    metadata:
      labels:
        app: lotus-worker-comm-app
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
{{- if .Values.securityContext.runAsNonRoot }}
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: {{ .podSecurityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
{{- end }}
      volumes:
        - name: lotus-secret-vol
          secret:
            secretName: {{ .Release.Name }}-lotus-secret
            defaultMode: 384 # permission 0600
        - name: vol-miner
          persistentVolumeClaim:
            claimName: vol-miner-mining-pool0-lotus-miner-0
{{- if .Values.lotusCommWorker.volumes.proofParams.enabled }}
        - name: proof-params
          persistentVolumeClaim:
            claimName: {{.Values.lotusCommWorker.volumes.proofParams.claimName }}
{{- end }}
{{- if .Values.lotusCommWorker.volumes.repo.enabled }}
        - name: repo
          hostPath:
            path: {{ .Values.lotusCommWorker.volumes.repo.hostPath }}
{{- end }}
      initContainers:
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          privileged: true
        image: {{ .Values.image.repository }}:{{ .Chart.AppVersion}}-{{ .Values.lotusMiner.cpuArch }}
        command: ["lotus-worker", "run", "--precommit1=false", "--precommit2=false", "--parallel-fetch-limit=2"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: LOTUS_MINER_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-lotus-secret
                key: lotus-miner.token
          - name: MINER_API_INFO
            value: "$(LOTUS_MINER_TOKEN):/ip4/{{ .Values.lotusMiner.IP4 }}/tcp/2345/http"
          - name: LOTUS_STORAGE_PATH
            value: "/var/lib/lotus-miner"
          - name: LOTUS_WORKER_PATH
            value: "/var/lib/lotus-worker"
          - name: GOLOG_LOG_FMT
            value: "json"
          - name: GOLOG_LOG_LEVEL
            value: "{{ .Values.lotusCommWorker.gologLogLevel }}"
          - name: FIL_PROOFS_PARAMETER_CACHE
            value: "/proof-params"
          - name: FIL_PROOFS_MAXIMIZE_CACHING
            value: "1"
          - name: RUST_LOG
            value: "info"
          - name: FIL_PROOFS_USE_GPU_COLUMN_BUILDER
            value: "1"
          - name: FIL_PROOFS_USE_GPU_TREE_BUILDER
            value: "1"
          - name: BELLMAN_CUSTOM_GPU
            value: "{{ .Values.lotusCommWorker.GPU }}"
        ports:
        - containerPort: 3456
          name: api
        volumeMounts:
          - name: vol-miner
            mountPath: /var/lib/lotus-miner
{{- if .Values.lotusCommWorker.volumes.proofParams.enabled }}
          - name: proof-params
            mountPath: /proof-params
{{- end }}
{{- if .Values.lotusCommWorker.volumes.repo.enabled }}
          - name: repo
            mountPath: /var/lib/lotus-worker
{{- end }}
        resources:
{{ toYaml .Values.lotusCommWorker.resources | indent 10 }}
      nodeSelector:
{{ toYaml .Values.lotusCommWorker.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.lotusCommWorker.tolerations | indent 8 }}
{{- end }}
